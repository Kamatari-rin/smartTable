server:
  port: 8080

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SPRING_DATASOURCE_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: YOUR_GOOGLE_CLIENT_ID
            client-secret: YOUR_GOOGLE_CLIENT_SECRET
            scope: profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
          yandex:
            client-id: YOUR_YANDEX_CLIENT_ID
            client-secret: YOUR_YANDEX_CLIENT_SECRET
            scope: login:info, login:email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          yandex:
            authorization-uri: https://oauth.yandex.ru/authorize
            token-uri: https://oauth.yandex.ru/token
            user-info-uri: https://login.yandex.ru/info
            user-name-attribute: login

  jpa:
    hibernate:
      ddl-auto: none
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
          format_sql: true
    show-sql: true
